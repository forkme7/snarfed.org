Migrated to WordPress

<a href="http://wordpress.org/">
  <img class="right" src="wordpress.png" alt="wordpress" /></a>

This site, [snarfed.org](http://snarfed.org/), has been running happily on
[PyBlosxom](http://pyblosxom.bluesock.org/) for the
[last four years](2006-08-22_virtual_housewarming). PyBlosxom has been great,
and I've been happy to use it and
[even](pyblosxom_history)
[give](pyblosxom_openid_server)
[back](pyblosxom_rdf_flavour)
[a](pyblosxom_ajax_comments)
[bit](pyblosxom_index).

However, the PyBlosxom community is pretty small, so when I needed a new
feature or improvement, I often
[ended](pyblosxom_ajax_comments)
[up](pyblosxom_index)
[doing](pyblosxom_openid_comments)
[it](pyblosxom_openid_server)
[myself](pyblosxom_rdf_flavour). I didn't usually mind, but I'm not a
web developer, so I gradually lost patience and interest in hacking on
a web framework.

The final straw was server load. PyBlosxom's caching is good, but not great, so
when my site saw a traffic spike, the server's CPU load would spike.
[My hosting provider](http://pair.com/) is great, but they still noticed,
and it occasionally made them unhappy enough that they'd
[clobber my PyBlosxom CGI script](2009-02-23_back).

<a href="http://pyblosxom.bluesock.org/">
  <img class="left" src="pyblosxom.jpg" alt="pyblosxom" /></a>

So, with a heavy heart, I started looking around for an alternative. I wanted
something mature, with a large community, so I could expect bug fixes and new
features without implementing them myself. I also wanted something that
supported the workflow I've gotten used to: write posts with
[Markdown](http://daringfireball.net/projects/markdown/) in plain text files,
store them along with images and static files in
[Subversion](http://subversion.tigris.org/), publish them via command line to a
local server that mirrors the live server, test and iterate and finally publish
them to the live server via `svn up` and other command line tools over ssh.

After some research, I finally settled on [WordPress](http://wordpress.org/). I
was reluctant at first, since it's backed by a database, and I really didn't
want to be a DBA. However, WordPress's stability, maturity, strong community,
and wealth of [plugins](http://wordpress.org/extend/plugins/) and
[themes](http://wordpress.org/extend/themes/) eventually won me over. (Not to
mention that a small WordPress database is way easier to manage than a
[sharded transaction processing backend](http://localhost/scaling_data_on_the_cheap.html).)

I'm still working out the kinks, and I'll miss PyBlosxom, but overall, I'm happy
with the move so far. You may not notice much of a difference, apart from faster
page loads due to [static file based caching](http://ocaoimh.ie/wp-super-cache/),
but at least it's less likely to get shut off now.

Here are some of the tools, scripts, and patches I wrotes during the migration:

  * [snarfed WordPress theme](snarfed_wordpress_theme)
  * [sync_wordpress.sh](sync_wordpress)
  * [pyblosxom2wxr.sh](pyblosxom2wxr)
  * [blogpost.sh](blogpost)
  * [generate_blogpost.sh](generate_blogpost)
  * [extract compacted PyBlosxom comments](extract_compacted_pyblosxom_comments)
  * [Thematic](http://themeshaper.com/thematic/) patches:
[per-comment hooks](http://code.google.com/p/thematic/issues/detail?id=83)
and a [comment-meta filter](http://code.google.com/p/thematic/issues/detail?id=82)
  * Usability patches to [Shutter Reloaded](http://plugins.trac.wordpress.org/ticket/1178)
and [NextGEN Gallery](http://plugins.trac.wordpress.org/ticket/1179)
  * [WXR importer](http://codex.wordpress.org/Importing_Content#WordPress) comment tag [bug fix patch](http://plugins.trac.wordpress.org/ticket/1162)

Enjoy!
