pyblosxom openid server

[![openid](/space/openid-logo.png)](http://openid.net/)
[![pyblosxom](/space/pyblosxom.jpg)](http://pyblosxom.sf.net/)

For the impatient: <br />
&nbsp; Download [openid\_server.py](/space/openid_server.py) or
[openid\_server-0.1.tar.gz](/space/openid_server-0.1.tar.gz)  
&nbsp; Download [openid\_libs.zip](/space/openid_libs.zip)  
&nbsp; [OpenID home page](http://openid.net/)  
&nbsp; [PyBlosxom home page](http://pyblosxom.sf.net/)  

[openid_server.py](/space/openid_server.py) is a
[PyBlosxom](http://pyblosxom.sf.net/) plugin that implements
[OpenID](http://openid.net/) 1.1. OpenID is a distributed authentication
protocol, ie a single sign on platform, that uses URLs as identifiers. If you
have a PyBlosxom site, this plugin allows you to login anywhere that accepts
OpenID.

In OpenID terminology, this plugin acts as an an 
[Identifer](http://openid.net/specs/openid-authentication-1_1.html#anchor2) and
[Identity Provider](http://openid.net/specs/openid-authentication-1_1.html#anchor2).
It provides an
[endpoint URL](http://openid.net/specs/openid-authentication-1_1.html#anchor2),
handles OpenID requests on that endpoint, allows
[associations](http://openid.net/specs/openid-authentication-1_1.html#mode_associate),
and authenticates the user with an HTML form.

To use it, first download
[openid_server.py](/space/openid_server.py) and
[openid\_libs.zip](/space/openid_libs.zip)
and place them both in your plugins directory. (`openid_libs.zip` is a
convenient, drop-in package of necessary libraries, provided by
[JanRain](http://janrain.com/),
[Yadis](http://yadis.org/), and others. If you don't trust me - and why should
you? - feel free to
[build and install them yourself](http://www.openidenabled.com/openid/libraries/python).)

Then, add this line to your flavour's head template:

    <link rel="openid.server"
          href="$base_url$openid_trigger">

If you want to use SSL, hard-code your base url, like so:

    <link rel="openid.server"
          href="https://snarfed.org$openid_trigger">

Finally, add the `openid_password` (required) and `openid_trigger` (optional)
config variables to your `config.py`:

    py['openid_password'] = 'topsecret!'
    py['openid_trigger'] = '/openid'

Et voila! You should be good to go. Try it out on a friendly neighborhood
OpenID-enabled blog near you, like maybe
[Scott Kveton](http://kveton.com/blog/)'s.

Default HTML is included for the endpoint, login, and error pages. For your
CSS styling pleasure, it uses divs with the classes `openid-info`,
`openid-login`, and `openid-error`.

You can override the default HTML by adding `openid-info`, `openid-login`, and
`openid-error` templates for your flavour of choice. Example templates for the
html flavour are included in
[openid_server-0.1.tar.gz](/space/openid_server-0.1.tar.gz).


openid_server.py is copyright 2006 [Ryan Barrett](/space/contact), and is
distributed under the [GPL](http://www.gnu.org/licenses/gpl.html).

See also:
  * [pyblosxom ajax comments](/space/pyblosxom+ajax+comments)
  * [windows p2p](/space/windows+p2p)
  * [pyblosxom index](/space/pyblosxom+index)
  * [pyblosxom history](/space/pyblosxom+history)
  * [photogallery](/space/photogallery)
  * [hardcodedates](/space/hardcodedates)
  * [filekicker](/space/filekicker)
