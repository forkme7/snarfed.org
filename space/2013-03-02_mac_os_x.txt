Mac OS X

<a href="http://www.apple.com/mac/">
 <img class="right" src="mac_os_x.jpg" /></a>

After 12 years on Linux, I'm grudgingly switching to Mac OS X. I wasn't excited
about it, but it's better than I expected. It's not news any more, but ok, OS X
is a pretty, usable skin on top of a real POSIX OS. Darwin is definitely
different from Linux, but it's close enough to feel familiar, and smooths over
pretty much all the rough edges you might hit on a Linux distro.

Even so, it's a big change from what I'm used to. Here are some of the things
I've done to make it feel comfortable.

<!-- more -->
<span />

  * [Homebrew](#Homebrew)
  * [Window manager](#Window_manager)
  * [Emacs](#Emacs)
  * [Firefox](#Firefox)
  * [Mac OS X](#Mac_OS_X)
  * [Keyboard and mouse](#Keyboard_and_mouse)
  * [Miscellaneous](#Miscellaneous)


<a name="Homebrew"></a>
#### Homebrew

One of the first things I missed was
[APT](http://en.wikipedia.org/wiki/Advanced_Packaging_Tool), the package
manager. Apple's App Store is nice, but it's aimed at end users, so it's not so
good for installing e.g. GNU utilities or MySQL. A while back I might have used
[MacPorts](http://www.macports.org/) (nee Darwin) or
[Fink](http://www.finkproject.org/),
but the new hotness now is [Homebrew](http://mxcl.github.com/homebrew/), which
I'm liking a lot.

One note: homebrew formulae that include `.app` files usually put them in
`/usr/local/Cellar/[formula]/[version]`. You can symlink them directly into
Applications from there to install them.

Another note: for `.app`s to use binaries installed by homebrew in
`/usr/local/bin`, e.g. `emacsclient`, you need to add that path to the default
`PATH` environment variable for OS X apps. Here are instructions
[from Homebrew](https://github.com/mxcl/homebrew/wiki/FAQ) and
[from Apple](http://developer.apple.com/library/mac/#/legacy/mac/library/qa/qa1067/_index.html).
Unfortunately, I haven't gotten this to work quite yet.

Here are some packages I've installed so far:

  * autoconf
  * automake
  * colordiff
  * coreutils
  * emacs
  * exif
  * flickcurl
  * fontconfig
  * freetype
  * fuse4x
  * gettext
  * glib
  * gnupg
  * go
  * graphicsmagick
  * imagemagick
  * jpeg
  * libexif
  * libpng
  * libtool
  * mercurial
  * mpg123
  * mplayer
  * mysql
  * pkg-config
  * pstree
  * rename
  * sshfs
  * wget

Apache is installed but not started by default; run `apachectl -k start` to
start it. Here's [more on setting up LAMP](http://benatkin.com/2011/09/10/php-and-mysql-on-mac-os-x-lion-with-homebrew/).


<a name="Window_manager"></a>
#### Window manager

One of the most important parts of my Linux setup was my tiling window manager,
[Ion](http://en.wikipedia.org/wiki/Ion_%28window_manager%29), which I followed
with a brief stint on [notion](http://notion.sourceforge.net/) (a fork) after
Ion's author
[went crazy](http://en.wikipedia.org/wiki/Ion_%28window_manager%29#Controversy).

It's also the part that I haven't been able to match, at least so far. I've
found programs with similar ideas, but most of them seem like little more then
glorified bags shortcut keys for pushing windows around. I haven't found many
true window manager that actually _manage my windows_ for me.
[I'm not](http://apple.stackexchange.com/questions/9659/what-window-management-options-exist-for-os-x)
[the only](http://news.ycombinator.com/item?id=4059820)
[one](http://mac.appstorm.net/roundups/utilities-roundups/20-mac-window-management-utilities/),
either.

Ah well. [xnomad](https://github.com/fjolnir/xnomad),
[Slate](https://github.com/jigish/slate), and
[Tyler WM](http://www.tylerwm.com/) seem the closest so far. I'm trying out
Slate right now; here are my [.slate](http://snarfed.org/dotfiles/.slate) and
[.slate.js](http://snarfed.org/dotfiles/.slate.js). We'll see how it turns out!

(Some of the shortcut bags look pretty good, too:
[Moom](http://manytricks.com/moom/),
[ShiftIt](https://github.com/fikovnik/ShiftIt),
[Divvy](http://mizage.com/divvy/),
[SizeUp](http://www.irradiatedsoftware.com/sizeup/),
[Spectacle](http://spectacleapp.com/),
[Optimal Layout](http://most-advantageous.com/optimal-layout),
[Doublepane](http://5amcode.com/), and others.)


<a name="Emacs"></a>
#### Emacs

I pretty much live inside just two programs:
[Emacs](http://www.gnu.org/s/emacs/) and [Firefox](http://firefox.com/). I was
able to migrate my configs for both, which made switching OSes a lot easier.

There are
[plenty](http://emacsformacosx.com/)
[of](http://www.emacswiki.org/emacs/EmacsForMacOS#toc9)
[Emacs](http://aquamacs.org/)
[packages](https://plus.google.com/104330705025733851532/posts/1ZCuoEZc8VB)
for OS X. I used [Homebrew](#Homebrew) and
ran `brew install emacs --cocoa` to get Emacs 24.2 with
[native full screen support](http://batsov.com/articles/2012/12/09/emacs-24-dot-3-introduces-native-osx-full-screen-support/)
backported from 24.3.

I hadn't used Emacs 24 before this. One of my favorite new features is the built
in package manager. Here are the packages I've installed so far:

  * autoconf
  * automake
  * css-mode
  * emacs
  * exif
  * gnupg
  * go-mode
  * imagemagick
  * js2-mode
  * libtool
  * lua-mode
  * markdown-mode
  * mercurial
  * mpg123
  * mplayer
  * mysql
  * php-mode
  * redo+
  * sgml-mode
  * sshfs
  * wget


<a name="Firefox"></a>
#### Firefox

I migrated profile the brute force way: I copied my profile directory directly
from `~/.mozilla/firefox/personal/` to `~/Library/Application
Support/Firefox/Profiles/personal` and updated the fully qualified home
directory paths in `prefs.js`, `search.json`, `extensions.ini`.

This mostly worked, but a few things like history didn't entirely make it. Next
time, I might consider a backup and restore utility like
[FEBE](https://addons.mozilla.org/en-US/firefox/addon/febe/) instead.


<a name="Mac_OS_X"></a>
#### Mac OS X

There are lots of little differences in the OS and its shell. To start, I knew
it would ask me to make an
[Apple Id](http://www.apple.com/asia/support/appleid/) for use with the App
store, etc., but I didn't expect it to be quite so aggressive. Even so, I've
managed to sidestep it so far. I had to use one to download
[XCode](https://developer.apple.com/xcode/), but I've avoided attaching it to
the computer itself.

Programs are usually run as
[`.app` files](http://superuser.com/questions/78176/how-do-mac-app-execution-files-work)
are executable archives that bundle include a manifest, binaries, supporting
files, icons, etc. They're usually placed in the `/Applications` directory.
The actual binary(ies) are in `XXX.app/Contents/MacOS/`.

Outside of the App Store, there are two standard ways to install and programs.
[`.dmg` files](http://www.ofzenandcomputing.com/zanswers/779/) are disk images,
not zip files or installer binaries. Double click on them to mount them, drag
the application file inside to the Applications folder, then unmount the image and
optionally delete it.

[`.pkg` files](http://www.macfreek.nl/memory/Mac_OS_X_Installer_Packages#Package_file_format)
are package installers. Similarly,
[`.mpkg` files](http://www.macfreek.nl/memory/Mac_OS_X_Installer_Packages#Multipackage_Files)
are more flexible and powerful "multipackage" installers. You can
[install them](http://www.commandlinefu.com/commands/view/2031/install-an-mpkg-from-the-command-line-on-osx)
with the built-in `installer` program:
`sudo installer -pkg /Volumes/someapp/someapp.mpkg -target /`

Power settings are pretty solid out of the box, and there's even a useful
command line utility, `pmset`. There's no built in way to tell it not to sleep
when the lid closes, but there are third party programs like
[InsomniaT](http://forums.macrumors.com/showpost.php?p=12150590&postcount=4) and
[NoSleep](http://www.technologytell.com/apple/90045/prevent-your-macbook-from-sleeping-when-its-lid-is-closed-with-nosleep/).
([Power nap](http://support.apple.com/kb/ht5394) looks related but isn't; it's
proprietary and only wakes up to do Apple-specific things.)
Incidentally, the keyboard shortcut for sleep is Cmd-Option-Power.

System Preferences is self explanatory; it's the equivalent of dotfiles in *nix
and Control Panel in Windows. It looks like it may be a pretty frontend to
System Information (in Utilities), which is similar to GConf or the Windows
Registry. The actual preference data is (sometimes?) stored in
[`.plist` files](http://en.wikipedia.org/wiki/Property_list).
There used to be a standalone
[Property List Editor app](http://en.wikipedia.org/wiki/Apple_Developer_Tools#Property_List_Editor),
but now it's embedded in XCode.
There's also the `defaults(1)` command line program.

I turned on FileVault 2, Apple's full-disk encryption system. It's pretty self
explanatory, and evidently much better than their first version. The only
disappointing thing is that it requires me to log in with my password after a
certain amount of idle time. I tried to
[disable that](http://superuser.com/questions/313425/toggle-ask-for-password-after-screensaver-sleep-or-the-delay-in-10-7-using-ter),
but I needed to turn on
[automatic login](http://forums.macrumors.com/showthread.php?t=1416302), which
[FileVault doesn't allow](https://discussions.apple.com/message/17983068#17983068).
I even tried variations on
`defaults write com.apple.screensaver askForPassword 0`, but no luck.
Sigh, oh well.

Networking is pretty straightforward, and has its own command line utility,
`[airport](http://osxdaily.com/2007/01/18/airport-the-little-known-command-line-wireless-utility/)`.

Keychain integrates with SSH keys automatically, which is pretty damn cool.
Sadly it doesn't also handle GnuPG keys automatically, but I only use mine
rarely, so I don't mind typing the password each time or just using stock `gpg-agent`.

To
[set your hostname](http://osxdaily.com/2012/10/24/set-the-hostname-computer-name-and-bonjour-name-separately-in-os-x/)
in the GUI, go to System Preferences, Sharing, Computer Name. To do it from the
command line: `scutil --set [HostName,LocalHostName,ComputerName]`

I ran these commands to
[always show the full path in Finder windows](http://apple.stackexchange.com/a/574/43900):

    defaults write com.apple.finder _FXShowPosixPathInTitle -bool YES
    killall Finder

Sound has one nice feature: it automatically remembers volume for headphone vs
speakers separately, which helps you avoid blowing out your eardrums. Nice.


<a name="Keyboard_and_mouse"></a>
#### Keyboard and mouse

Thanks to [Fitts' law](http://en.wikipedia.org/wiki/Fitts'_law), I tend to use
the keyboard much more than the mouse. Fortunately, OS X has
[lots of built in keyboard shortcuts](http://support.apple.com/kb/ht1343), and
it's very configurable out of the box. You can even
[add shortcuts to third party applications](http://support.apple.com/kb/PH3957),
to a degree, and wonder of wonders, even swap Caps Lock and Control. (Speaking
of which, if you do that in System Preferences, remembmer to do it in
_each keyboard_ you use!)

Beyond that, the best thing I've found to make OS X more keyboardable is
[KeyRemap4MacBook](http://pqrs.org/macosx/keyremap4macbook/). I use it to get
[Sticky Keys](http://support.apple.com/kb/PH11262) that _don't_
[lock](http://apple.stackexchange.com/questions/13708/disabling-the-keep-pressed-function-of-os-x-sticky-keys),
add Emacs key bindings in text controls, reclaim some of the function keys, make
Control-arrow keys navigate by words, make Return act like Control when it's
held down, and emulate my beloved missing Page Up and Page Down keys.

It's not all kittens and rainbows, though. First, I sorely miss Windows and
Linux's Shift-F10 shortcut for right click. Evidently there
[isn't an equivalent one](http://superuser.com/questions/93937/keyboard-shortcut-to-right-click-in-mac-os-x)
in OS X. You can
[use mouse keys and Ctrl-5](http://superuser.com/questions/93561/right-click-using-keyboard-in-mac-os-x),
but that ties up rest of keyboard, so it's not really an option.

I also dreadfully miss navigating menus with the keyboard. There's a keyboard
shortcut to focus the menu bar, but it doesn't work in all apps, e.g. Emacs.

Finally, some modal dialog boxes can't be navigated with the keyboard by Tab. I
think the common thread is that they don't have a corresponding GUI app running
- for example, I see this in Slate's startup error messages. I thought they were
[utility windows](http://apple.stackexchange.com/questions/71645/how-to-interact-with-dialog-boxes-using-keyboard-that-appear-not-to-allow-keyboa),
but they don't respond to Ctrl-F6.


<a name="Miscellaneous"></a>
#### Miscellaneous

I used [Pidgin](http://pidgin.im/) on Linux. [Adium](http://adium.im/), its OS X
counterpart, seems like an ok replacement so far.

I'm using [Menu Meters](http://www.ragingmenace.com/software/menumeters/) to get
minimal CPU and network activity monitors in the menu bar.

I'm using [HoRNDIS](http://joshuawise.com/horndis) for tethering over USB to my
Android. I wish it put an
[icon in the menu bar](https://github.com/jwise/HoRNDIS/issues/11), but
otherwise it's great.

The built in Python doesn't read my `~/.python`. Not sure why yet.
